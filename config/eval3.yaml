# In this scenario:
# - There is one order of one shipment.
# - The order will be updated while it is being fulfilled.
#   - Shipments will be evaluated against the updated order.
#   - Teams should respond by filling the updated order instead of the original order.

options:
  insert_models_over_bins: true
  spawn_extra_models: false
  model_type_aliases:
    order_part3: gasket_part
    order_part2: pulley_part
    order_part1: gear_part
    order_part4: piston_rod_part

orders:
  order_0:
    announcement_condition: time
    announcement_condition_value: 0.0
    shipment_count: 1
    destinations: [agv1]
    products:
      product_0:
        type: order_part2
        pose:
          xyz: [0.1, -0.2, 0]
          rpy: [0, 0, 0]
      product_1:
        type: order_part1
        pose:
          xyz: [-0.1, -0.2, 0]
          rpy: [0, 0, 0]
      product_2:
        type: order_part4
        pose:
          xyz: [-0.15, 0.15, 0]
          rpy: [0, 0, 0]
      product_3:
        type: order_part3
        pose:
          xyz: [0.0, 0.15, 0]
          rpy: [0, 0, 0]


models_over_bins:
  bin6:
    models:
      gear_part:
        xyz_start: [0.1, 0.1, 0.0]
        xyz_end: [0.4, 0.47, 0.0]
        rpy: [0, 0, '-pi/4']
        num_models_x: 1
        num_models_y: 4
  bin5:
    models:
      piston_rod_part:
        xyz_start: [0.1, 0.1, 0.0]
        xyz_end: [0.35, 0.5, 0.0]
        rpy: [0, 0, 'pi/4']
        num_models_x: 2
        num_models_y: 2
  bin1:
    models:
      pulley_part:
        xyz_start: [0.15, 0.15, 0.0]
        xyz_end: [0.35, 0.45, 0.0]
        rpy: [0, 0, 0]
        num_models_x: 1
        num_models_y: 2
  bin2:
    models:
      gasket_part:
        xyz_start: [0.1, 0.15, 0.0]
        xyz_end: [0.4, 0.5, 0.0]
        rpy: [0, 0, 'pi/2']
        num_models_x: 2
        num_models_y: 1
